<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.calculator</groupId>
    <artifactId>calculator</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Calculator tests</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <serenity.version>1.2.3</serenity.version>
        <serenity.cucumber.version>1.1.24</serenity.cucumber.version>
        <webdriver.driver>appium</webdriver.driver>
        <!--<target.url>https://acc.ns.nl/producten</target.url>-->
        <!--<admin.url>https://admin76.test.ns.nl/producten</admin.url>-->
        <target.url>https://intershop76.test.ns.nl/producten</target.url>
        <admin.url>https://admin76.test.ns.nl/producten</admin.url>
    </properties>

    <profiles>

        <profile>
            <id>local</id>
            <properties>
                <target.url>local</target.url>
            </properties>
        </profile>
        <profile>
            <id>acceptance</id>
            <properties>
                <target.url>https://acc.ns.nl</target.url>
            </properties>
        </profile>
        <profile>
            <id>sauce</id>
            <properties>
                <!--<saucelabs.url>http://bamboons:8ef673f4-acde-4d1d-a637-520167cf3b32@ondemand.saucelabs.com:80/wd/hub</saucelabs.url>-->
                <!--<saucelabs.access.key>8ef673f4-acde-4d1d-a637-520167cf3b32</saucelabs.access.key>-->
                <!--<saucelabs.user.id>bamboons</saucelabs.user.id>-->
                <saucelabs.url>http://rperez:26091644-338c-4332-a3cd-c7a372f0ebb3@ondemand.saucelabs.com:80/wd/hub</saucelabs.url>
                <saucelabs.access.key>26091644-338c-4332-a3cd-c7a372f0ebb3</saucelabs.access.key>
                <saucelabs.user.id>rperez</saucelabs.user.id>
                <saucelabs.record-screenshots>false</saucelabs.record-screenshots>
                <saucelabs.record-video>true</saucelabs.record-video>
                <!--<saucelabs.tunnelIdentifier>bouwinternet</saucelabs.tunnelIdentifier>-->
                <!--<saucelabs.parentTunnel>bouwinternet</saucelabs.parentTunnel>-->
            </properties>
            <build>
                <plugins>
                    <!-- The Cucumber JVM Parallel plugin is used to generate as many runners as feature files (or as scenarios
                    if configured that way. -->
                    <plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>2.1.0</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    <!-- Mandatory -->
                                    <!-- comma separated list of package names to scan for glue code -->
                                    <glue>nl.ns.nsecom_aat</glue>
                                    <!-- These are optional, with the default values -->
                                    <!-- Where to output the generated tests -->
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
                                    <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                                    <featuresDirectory>src/test/resources/features
                                    </featuresDirectory>
                                    <!-- Directory where the cucumber report files shall be written  -->
                                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                                    <!-- comma separated list of output formats -->
                                    <format>json</format>
                                    <!-- CucumberOptions.strict property -->
                                    <strict>false</strict>
                                    <!-- CucumberOptions.monochrome property -->
                                    <monochrome>true</monochrome>
                                    <!-- The tags to run, maps to CucumberOptions.tags property -->
                                    <tags></tags>
                                    <!-- If set to true, only feature files containing the required tags shall be generated. -->
                                    <filterFeaturesByTags>false</filterFeaturesByTags>
                                    <!-- Generate TestNG runners instead of JUnit ones. -->
                                    <useTestNG>false</useTestNG>
                                    <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                                    <namingScheme>simple</namingScheme>
                                    <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                                    <namingPattern>Parallel{c}IT</namingPattern>
                                    <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                                    <parallelScheme>FEATURE</parallelScheme>
                                    <!-- The customVmTemplate points to the template for creating runners. -->
                                    <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.18.1</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- We rely on Failsafe to execute the runner classes, as it provides gentle failure handling. The
                        Sauce properties are included as system property variables. -->
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.18.1</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                            <includes>
                                <!-- Includes all java bytecode classes that follow a specific pattern -->
                                <include>**/Parallel*IT.class</include>
                            </includes>
                            <argLine>-Xmx512m</argLine>
                            <!-- The below parameter {classes, methods} does not make much difference :/ -->
                            <parallel>classes</parallel>
                            <threadCount>20</threadCount>
                            <!-- Comment the below line to not launch different JVM's -->
                            <!--                    <forkCount>20</forkCount>-->
                            <systemPropertyVariables>
                                <webdriver.driver>${webdriver.driver}</webdriver.driver>
                                <saucelabs.target.platform>${saucelabs.target.platform}</saucelabs.target.platform>
                                <saucelabs.driver.version>${saucelabs.driver.version}</saucelabs.driver.version>
                                <saucelabs.url>${saucelabs.url}</saucelabs.url>
                                <saucelabs.access.key>${saucelabs.access.key}</saucelabs.access.key>
                                <saucelabs.user.id>${saucelabs.user.id}</saucelabs.user.id>
                                <saucelabs.test.name>${saucelabs.test.name}</saucelabs.test.name>
                                <saucelabs.record-screenshots>${saucelabs.record-screenshots}</saucelabs.record-screenshots>
                                <saucelabs.record-video>${saucelabs.record-video}</saucelabs.record-video>
                                <saucelabs.tunnelIdentifier>${saucelabs.tunnelIdentifier}</saucelabs.tunnelIdentifier>
                                <saucelabs.parentTunnel>${saucelabs.parentTunnel}</saucelabs.parentTunnel>
                                <org.slf4j.simpleLogger.defaultLogLevel>DEBUG</org.slf4j.simpleLogger.defaultLogLevel>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- The Apache Maven plugin is used to aggregate the Serenity reports in case we are using multiple
                    runners, since the reports are scattered in multiple JSON files corresponding to
                    the execution results of JUnit tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.2</version>
                        <configuration>
                            <source>1.7</source>
                            <target>1.7</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>net.serenity-bdd.maven.plugins</groupId>
                        <artifactId>serenity-maven-plugin</artifactId>
                        <version>${serenity.version}</version>
                        <executions>
                            <execution>
                                <id>serenity-reports</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Include Sauce Connect plugin -->
                    <plugin>
                        <groupId>com.saucelabs.maven.plugin</groupId>
                        <artifactId>sauce-connect-plugin</artifactId>
                        <version>2.1.23</version>
                        <configuration>
                            <sauceUsername>rperez</sauceUsername>
                            <sauceAccessKey>26091644-338c-4332-a3cd-c7a372f0ebb3</sauceAccessKey>
                        </configuration>
                        <executions>
                            <!-- Start Sauce Connect prior to running the integration tests -->
                            <execution>
                                <id>start-sauceconnct</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>start-sauceconnect</goal>
                                </goals>
                            </execution>
                            <!-- Stop the Sauce Connect process after the integration tests have finished -->
                            <execution>
                                <id>stop-sauceconnect</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>stop-sauceconnect</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>non-parallel-sauce</id>
            <properties>
                <!--<saucelabs.url>http://bamboons:8ef673f4-acde-4d1d-a637-520167cf3b32@ondemand.saucelabs.com:80/wd/hub</saucelabs.url>-->
                <!--<saucelabs.access.key>8ef673f4-acde-4d1d-a637-520167cf3b32</saucelabs.access.key>-->
                <!--<saucelabs.user.id>bamboons</saucelabs.user.id>-->
                <saucelabs.url>http://rperez:26091644-338c-4332-a3cd-c7a372f0ebb3@ondemand.saucelabs.com:80/wd/hub</saucelabs.url>
                <saucelabs.access.key>26091644-338c-4332-a3cd-c7a372f0ebb3</saucelabs.access.key>
                <saucelabs.user.id>rperez</saucelabs.user.id>
                <saucelabs.record-screenshots>false</saucelabs.record-screenshots>
                <saucelabs.record-video>true</saucelabs.record-video>
                <!--<saucelabs.tunnelIdentifier>bouwinternet</saucelabs.tunnelIdentifier>-->
                <!--<saucelabs.parentTunnel>bouwinternet</saucelabs.parentTunnel>-->
            </properties>
        </profile>


        <profile>
            <id>sauce_firefox</id>
            <properties>
                <saucelabs.target.platform>LINUX</saucelabs.target.platform>
                <webdriver.driver>firefox</webdriver.driver>
                <saucelabs.driver.version>41</saucelabs.driver.version>
                <saucelabs.test.name>Firefox</saucelabs.test.name>
            </properties>
        </profile>
        <profile>
            <id>sauce_chrome</id>
            <properties>
                <saucelabs.target.platform>LINUX</saucelabs.target.platform>
                <webdriver.driver>chrome</webdriver.driver>
                <saucelabs.driver.version>latest</saucelabs.driver.version>
                <!--<saucelabs.url>http://rperez:26091644-338c-4332-a3cd-c7a372f0ebb3@ondemand.saucelabs.com:80/wd/hub</saucelabs.url>-->
                <!--<saucelabs.access.key>26091644-338c-4332-a3cd-c7a372f0ebb3</saucelabs.access.key>-->
                <!--<saucelabs.user.id>rperez</saucelabs.user.id>-->
                <saucelabs.test.name>NS Ecommerce AAT</saucelabs.test.name>
                <saucelabs.record-screenshots>false</saucelabs.record-screenshots>
                <saucelabs.record-video>true</saucelabs.record-video>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>maven repository dot com</id>
            <url>https://mvnrepository.com/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>


    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-core</artifactId>
            <version>${serenity.version}</version>
        </dependency>
		<dependency>
		  <groupId>net.serenity-bdd</groupId>
		  <artifactId>serenity-screenplay</artifactId>
		  <version>${serenity.version}</version>
		</dependency>		
		<dependency>
		  <groupId>net.serenity-bdd</groupId>
		  <artifactId>serenity-screenplay-webdriver</artifactId>
		  <version>${serenity.version}</version>
		</dependency>
        <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-cucumber</artifactId>
            <version>${serenity.cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.lambdaj</groupId>
            <artifactId>lambdaj</artifactId>
            <version>2.3.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mock-server/mockserver-client-java -->
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-client-java</artifactId>
            <version>3.10.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.json/json -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160810</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <includes>
                        <include>**/AcceptanceTestSuite.java</include>
                    </includes>
                    <argLine>-Xmx512m</argLine>
                    <systemPropertyVariables>
                        <webdriver.driver>${webdriver.driver}</webdriver.driver>
                        <saucelabs.target.platform>${saucelabs.target.platform}</saucelabs.target.platform>
                        <saucelabs.driver.version>${saucelabs.driver.version}</saucelabs.driver.version>
                        <saucelabs.url>${saucelabs.url}</saucelabs.url>
                        <saucelabs.access.key>${saucelabs.access.key}</saucelabs.access.key>
                        <saucelabs.user.id>${saucelabs.user.id}</saucelabs.user.id>
                        <!--saucelabs.driver.version=10-->
                        <saucelabs.test.name>${saucelabs.test.name}</saucelabs.test.name>
                        <saucelabs.record-screenshots>${saucelabs.record-screenshots}</saucelabs.record-screenshots>
                        <saucelabs.record-video>${saucelabs.record-video}</saucelabs.record-video>
                        <target.url>${target.url}</target.url>
                        <admin.url>${admin.url}</admin.url>
                        <org.slf4j.simpleLogger.defaultLogLevel>DEBUG</org.slf4j.simpleLogger.defaultLogLevel>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.serenity-bdd.maven.plugins</groupId>
                <artifactId>serenity-maven-plugin</artifactId>
                <version>${serenity.version}</version>
                <executions>
                    <execution>
                        <id>serenity-reports</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- The MockServer plugin starts and stops the mock server at specific phases -->
            <plugin>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-maven-plugin</artifactId>
                <version>3.10.4</version>
                <configuration>
                    <serverPort>1080</serverPort>
                    <proxyPort>1090</proxyPort>
                    <logLevel>DEBUG</logLevel>
                    <!-- <initializationClass>org.mockserver.maven.ExampleInitializationClass</initializationClass> -->
                </configuration>
                <executions>
                    <execution>
                        <id>process-test-classes</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
